<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	">
	
	<import resource="applicationContext-properties.xml" />

	<!-- dataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${dataSource.driverClassName}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
		<property name="maxActive">
			<value>${dataSource.maxActive}</value>
		</property>
		<property name="maxIdle">
			<value>${dataSource.maxIdle}</value>
		</property>
		<property name="maxWait">
			<value>${dataSource.maxWait}</value>
		</property>
		<property name="removeAbandoned">
			<value>${dataSource.removeAbandoned}</value>
		</property>
		<property name="removeAbandonedTimeout">
			<value>${dataSource.removeAbandonedTimeout}</value>
		</property>
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="select 1" />
	</bean>

	<!-- sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.show_sql=${hibernate.show_sql}
				hibernate.format_sql=${hibernate.format_sql}
			</value>
		</property>
		<property name="annotatedPackages">
			<list>
				<value>com.jim.bookstack.entity</value>
			</list>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.jim.bookstack.entity.Book</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务 -->
	<!-- 配置Hibernate的事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 定义事务通知，需要指定一个事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- 对get、find、search、query开头的方法要求只读事务 设置为只读属性是为了提高效率，详细请查API -->
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- 定义这些方法应用这些规则 -->
		<aop:pointcut id="serviceMethodPointcut" expression="execution(public * com.jim.bookstack.server.*.*(..))" />
		<!-- 将事务通知与应用规则的方法组合（织入） -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethodPointcut" />
	</aop:config>

	<!-- 配置DAO -->
	<bean name="bookDao" class="com.jim.bookstack.dao.impl.BookDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 配置服务层 -->
	<bean id="bookServer" class="com.jim.bookstack.server.impl.BookServerImpl">
		<property name="bookDao" ref="bookDao" />
	</bean>
</beans>
